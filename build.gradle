buildscript {
   repositories { 
      mavenLocal()
      jcenter()
      mavenCentral()

   }
   dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
      classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
      //classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.2'
   }
}

plugins { 
   id 'io.franzbecker.gradle-lombok' version '1.14'
   id "io.spring.dependency-management" version "1.0.7.RELEASE" 
   id "com.github.kt3k.coveralls" version "2.8.1" 
   id "org.owasp.dependencycheck" version "3.1.2"
   id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


jar {
   baseName = 'notification-service'
   version =  '0.1'
}

repositories {
   mavenLocal() 
   jcenter()
   mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
 
configurations {
   all*.exclude module : 'spring-boot-starter-logging'
}

lombok {
   version = '1.18.4'
   sha256 = ""
}

if (project.hasProperty('travis')) {
   println 'Using travis profile for building ' + project.getName()
   apply from: 'gradle/build_dependencies.gradle'
   apply from: 'gradle/profile-travis.gradle'
} else if (project.hasProperty('release') || project.hasProperty('clean-release')) {
   println 'Using release profile for building ' + project.getName()
   apply from: 'gradle/build_dependencies.gradle'
   apply from: 'gradle/profile-release.gradle'   
}

dependencies {
   compile("org.springframework.boot:spring-boot-starter-data-rest")
   compile("org.springframework.boot:spring-boot-starter-mail") 
   
   compile("org.javers:javers-spring-boot-starter-sql:3.9.0")
   compile("io.springfox:springfox-swagger-ui:2.9.0")
   
   compile("edu.kit.datamanager:service-base:0.1")
   compile("edu.kit.datamanager:generic-message-consumer:0.1.0")

   compile("com.monitorjbl:spring-json-view:0.16")
   compile("org.postgresql:postgresql:42.2.1")
   compile("org.apache.tika:tika-core:1.18") 
   compile ("org.javers:javers-core:5.3.2")

   
   //Java 11 Support 
   compile('javax.xml.bind:jaxb-api:2.2.11')
   compile('com.sun.xml.bind:jaxb-core:2.2.11')
   compile('com.sun.xml.bind:jaxb-impl:2.2.11')
   compile('javax.activation:activation:1.1.1')
   compile('org.javassist:javassist:3.23.1-GA')
    
   compileOnly('org.apache.httpcomponents:httpclient:4.5.6')

   testCompile("com.h2database:h2:1.4.194") 
   testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
   testCompile("org.springframework.boot:spring-boot-starter-test")
   testCompile("org.springframework:spring-test")
   testCompile("org.springframework.security:spring-security-test")
   
   //Java 11 Support 
   testCompile("org.mockito:mockito-core:2.18.0")
   testCompile("org.powermock:powermock-module-junit4:2.0.0-beta.5")
   testCompile("org.powermock:powermock-api-mockito2:2.0.0-beta.5")

   testCompile('org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE')
   testCompile('org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2')
   asciidoctor('org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE')
   asciidoctor('com.github.allati.asciidoctor.monotree:asciidoctor-extension-monotree:0.0.1')
}

bootJar {
   manifest {
      attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
   }
   dependsOn asciidoctor
   from ("${asciidoctor.outputDir}/html5") {
      into 'static/docs'
   }
   launchScript()
}

test {
   testLogging {
      outputs.upToDateWhen {false}
      showStandardStreams = true
   }
}


jacoco {
   toolVersion = "0.8.2"
}

jacocoTestReport {
   reports {
      xml.enabled true
      html.enabled true
   }
   afterEvaluate {
      //exclude some classes/package from code coverage report
      classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [\
            'edu/kit/datamanager/collection/configuration/**', \
            'edu/kit/datamanager/collection/filters/**', \
            'edu/kit/datamanager/collection/Application*'
               ])
         })
   }
}

